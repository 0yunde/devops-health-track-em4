name: Java CI + Selenium + SonarCloud + JMeter

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repositorio
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Maven local repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setup Chrome + ChromeDriver
        uses: browser-actions/setup-chrome@v2
        with:
          install-chromedriver: true

      - name: Build boot jar (skip tests)
        run: mvn -B clean package -DskipTests

      - name: Start application
        env:
          SPRING_PROFILES_ACTIVE: ci
        run: |
          set -euo pipefail
          JAR=$(ls target/*.jar | grep -v original | head -n1)
          nohup java -Dserver.port=8080 -jar "$JAR" > app.log 2>&1 &
          echo $! > app.pid
          sleep 5

      - name: Wait for server to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080/actuator/health \
               | grep -q '"status":"UP"'; then exit 0; fi
            sleep 5
          done
          echo "❌ Application not UP" >&2
          exit 1

      - name: Run unit & integration tests
        run: mvn -B test

      - name: Stop application
        if: always()
        run: |
          kill "$(cat app.pid)" || true

      - name: Upload surefire-reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports

      - name: Upload JaCoCo coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-coverage
          path: target/site/jacoco

      - name: Upload app.log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-log
          path: app.log
          overwrite: true

      # === Descarga y configuración de JMeter ===
      - name: Download and unpack JMeter
        run: |
          curl -sL https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.3.tgz \
            | tar xz -C $RUNNER_TEMP
          echo "$RUNNER_TEMP/apache-jmeter-5.6.3/bin" >> $GITHUB_PATH

      # === Ejecutar prueba de carga con JMeter ===
      - name: Run JMeter load test
        run: |
          # limpia resultados previos y crea carpeta para el informe
          rm -rf jmeter/result-login.jtl jmeter/html-report-login
          mkdir -p jmeter/html-report-login

          # modo non-GUI: genera .jtl y luego informe HTML
          jmeter -n \
            -t jmeter/test-login.jmx \
            -l jmeter/result-login.jtl \
            -e -o jmeter/html-report-login

      # === Subir artefactos de JMeter ===
      - name: Upload JMeter results (.jtl)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: jmeter/result-login.jtl

      - name: Upload JMeter HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-html-report
          path: jmeter/html-report-login

      # === SonarCloud Scan via Maven plugin ===
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_HT }}
        run: |
          mvn -B sonar:sonar \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=0yunde \
            -Dsonar.projectKey=0yunde_devops-health-track-em4 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN_HT }} \
            -Dsonar.branch.name=main
