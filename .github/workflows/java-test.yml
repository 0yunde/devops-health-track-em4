name: Java CI + Selenium + SonarCloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repositorio
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Maven local repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setup Chrome + ChromeDriver
        uses: browser-actions/setup-chrome@v2
        with:
          install-chromedriver: true

      # Build con repackage para que el jar sea ejecutable
      - name: Build boot jar (skip tests)
        run: mvn -B clean package -DskipTests

      - name: Start application
        env:
          SPRING_PROFILES_ACTIVE: ci
        run: |
          set -euo pipefail
          JAR=$(ls target/*.jar | grep -v original | head -n1)
          echo "Jar seleccionado: $JAR"
          unzip -p "$JAR" META-INF/MANIFEST.MF | grep -Ei 'Main-Class|Start-Class' || { echo "❌ Jar sin manifest ejecutable"; exit 1; }
          nohup java -Dserver.port=8080 -jar "$JAR" > app.log 2>&1 &
          echo $! > app.pid
          sleep 2
          head -n 50 app.log || true

      - name: Wait for server to be ready
        run: |
          set +e
          for i in {1..60}; do
            HTTP=$(curl -s -o /tmp/health.json -w "%{http_code}" http://localhost:8080/actuator/health || true)
            BODY=$(cat /tmp/health.json 2>/dev/null || true)
            echo "[$i] HTTP $HTTP $BODY"
            echo "$BODY" | grep -q '"status":"UP"' && exit 0
            sleep 5
          done
          echo "❌ La aplicación no respondió UP en el tiempo esperado" >&2
          echo "---- Procesos Java ----"; jps -l || true
          echo "---- Puertos en escucha ----"; ss -ltnp || true
          echo "---- Últimas 300 líneas de app.log ----"; tail -n 300 app.log || true
          exit 1

      - name: Run tests
        run: mvn -B test

      - name: Stop application
        if: always()
        run: |
          if [ -f app.pid ]; then
            kill "$(cat app.pid)" 2>/dev/null || true
          fi

      - name: Upload surefire-reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/surefire-reports

      - name: Upload JaCoCo coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-coverage
          path: target/site/jacoco

      - name: Upload app.log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-log
          path: app.log

      # SonarCloud analysis
      - name: Upload app.log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-log
          path: app.log

      # === SonarCloud Scan ===
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_HT }}
        with:
          args: >
            -Dsonar.organization=Oyunde
            -Dsonar.projectKey=Oyunde_devops-health-track-em4
            -Dsonar.projectName=devops-health-track-em4
            -Dsonar.host.url=https://sonarcloud.io
